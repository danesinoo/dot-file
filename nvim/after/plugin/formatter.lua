---- Utilities for creating configurations
--local util = require("formatter.util")
--
---- Provides the Format, FormatWrite, FormatLock, and FormatWriteLock commands
--require("formatter").setup({
--	-- Enable or disable logging
--	logging = true,
--	-- Set the log level
--	log_level = vim.log.levels.WARN,
--	-- All formatter configurations are opt-in
--	filetype = {
--		-- Formatter configurations for filetype "lua" go here
--		-- and will be executed in order
--		lua = {
--			-- "formatter.filetypes.lua" defines default configurations for the
--			-- "lua" filetype
--			require("formatter.filetypes.lua").stylua,
--
--			-- You can also define your own configuration
--			function()
--				-- Supports conditional formatting
--				if util.get_current_buffer_file_name() == "special.lua" then
--					return nil
--				end
--
--				-- Full specification of configurations is down below and in Vim help
--				-- files
--				return {
--					exe = "stylua",
--					args = {
--						"--search-parent-directories",
--						"--stdin-filepath",
--						util.escape_path(util.get_current_buffer_file_path()),
--						"--",
--						"-",
--					},
--					stdin = true,
--				}
--			end,
--		},
--
--		go = {
--			function()
--				return {
--					exe = "goimports",
--					stdin = true,
--				}
--			end,
--		},
--
--		python = {
--			function()
--				return {
--					exe = "black",
--					args = {
--						"-",
--					},
--					stdin = true,
--				}
--			end,
--		},
--
--		rust = {
--			function()
--				return {
--					exe = "rustfmt",
--					args = {
--						"--emit=stdout",
--					},
--					stdin = true,
--				}
--			end,
--		},
--
--		cpp = {
--			function()
--				return {
--					exe = "clang-format",
--					args = {
--						"-assume-filename",
--						util.escape_path(util.get_current_buffer_file_name()),
--						"-style=LLVM",
--					},
--					stdin = true,
--					try_node_modules = true,
--				}
--			end,
--		},
--
--		typescript = {
--			function()
--				return {
--					exe = "clang-format",
--					args = {
--						"-assume-filename",
--						util.escape_path(util.get_current_buffer_file_name()),
--						"-style=LLVM",
--					},
--					stdin = true,
--					try_node_modules = true,
--				}
--			end,
--		},
--
--		--tex = {
--		--	function()
--		--		local current_file = util.get_current_buffer_file_path()
--		--		local latexindent_command = string.format("latexindent -sl --line-length=80 -w %s", current_file)
--		--		os.execute(latexindent_command)
--
--		--		return {
--		--			exe = "",
--		--			args = {},
--		--			stdin = false,
--		--		}
--		--	end,
--		--},
--
--		-- Use the special "*" filetype for defining formatter configurations on
--		-- any filetype
--		["*"] = {},
--	},
--})
